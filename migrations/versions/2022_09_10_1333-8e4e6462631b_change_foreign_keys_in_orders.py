"""change foreign keys in orders

Revision ID: 8e4e6462631b
Revises: a04f3c7ad1d9
Create Date: 2022-09-10 13:33:19.843543

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "8e4e6462631b"
down_revision = "a04f3c7ad1d9"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint("orders_chef_id_fkey", "orders", type_="foreignkey")
    op.drop_constraint("orders_client_id_fkey", "orders", type_="foreignkey")
    op.drop_constraint("orders_supplier_id_fkey", "orders", type_="foreignkey")
    op.create_foreign_key(None, "orders", "client", ["client_id"], ["client_id"])
    op.create_foreign_key(None, "orders", "chef", ["chef_id"], ["chef_id"])
    op.create_foreign_key(None, "orders", "supplier", ["supplier_id"], ["supplier_id"])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "orders", type_="foreignkey")
    op.drop_constraint(None, "orders", type_="foreignkey")
    op.drop_constraint(None, "orders", type_="foreignkey")
    op.create_foreign_key(
        "orders_supplier_id_fkey", "orders", "users", ["supplier_id"], ["id"]
    )
    op.create_foreign_key(
        "orders_client_id_fkey", "orders", "users", ["client_id"], ["id"]
    )
    op.create_foreign_key("orders_chef_id_fkey", "orders", "users", ["chef_id"], ["id"])
    # ### end Alembic commands ###
